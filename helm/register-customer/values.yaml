# Default values for register-customer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: register-customer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  dapr.io/enabled: "true"
  dapr.io/log-level: "debug"
  dapr.io/app-id: "register-customer"
  dapr.io/app-port: "8080"
  dapr.io/volume-mounts: "ca-certificate:/tmp/certificates" # (STEP 1) Mount the certificates folder to the sidecar container
  dapr.io/config: "appconfig"
  dapr.io/env: "SSL_CERT_DIR=/tmp/certificates,ZEEBE_AUTHORIZATION_SERVER_URL=http://camunda-platform-keycloak.camunda-platform.svc.cluster.local/auth/realms/camunda-platform/protocol/openid-connect/token,ZEEBE_CLIENT_SECRET=VmhhKtSBMx,ZEEBE_CLIENT_ID=zeebe,ZEEBE_TOKEN_AUDIENCE=zeebe-api"
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: register-customer.kubernetes.localhost
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: tls-server-certificate
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
#  limits:
#    cpu: 200m
#    memory: 2Gi
#  requests:
#    cpu: 100m
#    memory: 200Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /actuator/health
    port: http
readinessProbe:
  httpGet:
    path: /actuator/health
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: ca-certificate
    configMap:
      name: ca-certificate
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: ca-certificate
    mountPath: /tmp/certificates
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
